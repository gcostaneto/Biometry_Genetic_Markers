#'===============================================================================================
#' Author: Germano Martins F. Costa Neto  <germano.cneto@usp.br>
#' Version: 0.01 (22 april 2019)
#'===============================================================================================
# Description: functions for linkage analysis


#'===============================================================================================
#' linkage analysis for dominant markers
#'===============================================================================================
LinkTst01 = function(M,
                     N,         # total de testes
                     alfa = .05, # significancia (padrao 5%)
                     digits = 4  # digitos para resultado
                            ){
  
  #' Passo 1: Contagem das classes
  #'-------------------------------------
  x = data.frame(gen=paste(M[,1],M[,2],sep="-"))
  n = sapply(x,table)
  
  pa = sum(n[which(rownames(n) == "0-0")],
           n[which(rownames(n) == "1-1")],na.rm = T) 
  
  re = sum(n[which(rownames(n) == "0-1")],
           n[which(rownames(n) == "1-0")],na.rm = T)
  
  #' Passo 2: Estimativa de theta (ou r) a partir de dois pontos
  #'-------------------------------------
  r = re/(re+pa)
  
  #' Passo 3: Verossimilhança
  #'-------------------------------------
  #' 3.1 Verossimilhança sob hipoteses Ha e Ho
  L1 = pa*log((1-r)/2) + re*log((r)/2) 
  L2 = pa*log((0.5)/2) + re*log((0.5)/2) 
  #' 3.2 Razão de Verossimilhança
  LRT = -2*(L2-L1)
  
  #' Passo 4: Bonferroni, p-value e LOD
  #'-------------------------------------
  p    = pchisq(LRT, df=1, lower.tail = FALSE) 
  bonf = alfa/N
  LOD = 0.2172*LRT 
  
  #' Passo 5: output
  #'-------------------------------------
  return(data.frame(markers = paste(names(M)[1],names(M)[2],sep="-"),
                    r = round(r,digits),
                    LRT = round(LRT,digits),
                    pvalue=round(p,digits),
                    LOD = round(LOD, digits),
                    Diagnosis = ifelse(r < 0.5 & p < bonf,"Linked","-")))
}

#'===============================================================================================
#' Multi-marker multi-model test
#'===============================================================================================
mult.link.test = function(type = c("01","012"), M, N, digits=3,start=1:2){
  
  results = NULL
  ind=start
  
  for(i in 1:(ncol(M)-1)){
    if(type == "01"){
      results=rbind(results,LinkTst01(M=mouse[,ind],N=13,digits=4))
    }
    if(type == "012"){
      results=rbind(results,LinkTst012(M=mouse[,ind],N=13,digits=4))
    }
    ind = ind + 1
  }
  return(results)
}

